# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные
# первые буквы. email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее
# подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net),
# te_4_st@test.com - верно указан.

import re


def is_valid(pattern, object):
    return True if re.search(pattern, object) else None


def validation_message(pattern, object):
    return f'{object} is valid' if is_valid(pattern, object) else f'{object} is invalid'


user_name = input('Type your name: ')
user_surname = input('Type your surname: ')
user_email = input('Type your email: ')

name_and_surname_pattern = r'^[A-ZА-ЯЁ][a-zа-яё]*$'
email_pattern = r'^[a-z0-9_]+@[a-z0-9]+\.(ru|org|com)$'

print(validation_message(name_and_surname_pattern, user_name))
print(validation_message(name_and_surname_pattern, user_surname))
print(validation_message(email_pattern, user_email))

# Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

dot_pattern = r'\.{2,}'

print('The text have 2 or more of dots') if is_valid(dot_pattern, some_str) else print('The text haven\'t 2 or more of dots')
